@page "/admin/books"
@page "/admin"
@inherits OwningComponentBase<IStoreRepository>

<table class="table table-sm table-striped table-bordered">
    <thead>
        <tr>
            <th>ID</th><th>ID автора</th>
            <th>Название</th><th>Категория</th>
            <th>Жанр</th><th>Описание</th>
            <th>Цена</th><th>Год издания</th>
            <th>Издательство</th><th>Количество страниц</th>
        </tr>
    </thead>
    <tbody>
        @if (BookData?.Count() > 0) {
            @foreach (var b in BookData) {
                <tr>
                    <td>@b.BookId</td>
                    <td>@b.AuthorId</td>
                    <td>@b.Title</td>
                    <td>@b.Category</td>
                    <td>@b.Genre</td>
                    <td>@b.Description</td>
                    <td>@b.Price.ToString("c")</td>
                    <td>@b.PublishingYear</td>
                    <td>@b.Publishing</td>
                    <td>@b.PageAmount</td>
                    <td>
                        <NavLink class="btn btn-info btn-sm"
                                 href="@GetDetailsUrl(b.BookId)">
                            Details
                        </NavLink>
                        <NavLink class="btn btn-warning btn-sm"
                                 href="@GetEditUrl(b.BookId)">
                            Edit
                        </NavLink>
                        <button class="btn btn-danger btn-sm"
                                 @onclick="@(e => DeleteBook(b))">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        } else {
            <tr>
                <td colspan="11" class="text-center">Нет книг</td>
            </tr>
        }
    </tbody>
</table>

<NavLink class="btn btn-primary" href="/admin/books/create">Создать</NavLink>

@code {

    public IStoreRepository Repository => Service;

    public IEnumerable<Book> BookData { get; set; } 
        = Enumerable.Empty<Book>();

    protected async override Task OnInitializedAsync() {
        await UpdateData();
    }

    public async Task UpdateData() {
        BookData = await Repository.Books.ToListAsync();
    }

    public async Task DeleteBook(Book b) {
        Repository.DeleteBook(b);
        await UpdateData();
    }

    public string GetDetailsUrl(ulong id) => $"/admin/books/details/{id}";
    public string GetEditUrl(ulong id) => $"/admin/books/edit/{id}";
}